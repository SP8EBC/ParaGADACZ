/**
 * WeatherLink API v1
 * First version of an API to get weather data from Davis stations
 *
 * The version of the OpenAPI document: 1.0.11
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.3.1.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * Davis_current_observation.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_Davis_current_observation_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_Davis_current_observation_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace org {
namespace openapitools {
namespace client {
namespace model {


/// <summary>
/// 
/// </summary>
class  Davis_current_observation
    : public ModelBase
{
public:
    Davis_current_observation();
    virtual ~Davis_current_observation();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// Davis_current_observation members

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getDID() const;
    bool dIDIsSet() const;
    void unsetDID();

    void setDID(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getStationName() const;
    bool stationNameIsSet() const;
    void unsetStation_name();

    void setStationName(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    int32_t getObservationAge() const;
    bool observationAgeIsSet() const;
    void unsetObservation_age();

    void setObservationAge(int32_t value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getDewpointDayHighF() const;
    bool dewpointDayHighFIsSet() const;
    void unsetDewpoint_day_high_f();

    void setDewpointDayHighF(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getDewpointDayHighTime() const;
    bool dewpointDayHighTimeIsSet() const;
    void unsetDewpoint_day_high_time();

    void setDewpointDayHighTime(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getDewpointDayLowF() const;
    bool dewpointDayLowFIsSet() const;
    void unsetDewpoint_day_low_f();

    void setDewpointDayLowF(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getDewpointDayLowTime() const;
    bool dewpointDayLowTimeIsSet() const;
    void unsetDewpoint_day_low_time();

    void setDewpointDayLowTime(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getDewpointMonthHighF() const;
    bool dewpointMonthHighFIsSet() const;
    void unsetDewpoint_month_high_f();

    void setDewpointMonthHighF(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getDewpointMonthLowF() const;
    bool dewpointMonthLowFIsSet() const;
    void unsetDewpoint_month_low_f();

    void setDewpointMonthLowF(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getDewpointYearHighF() const;
    bool dewpointYearHighFIsSet() const;
    void unsetDewpoint_year_high_f();

    void setDewpointYearHighF(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getDewpointYearLowF() const;
    bool dewpointYearLowFIsSet() const;
    void unsetDewpoint_year_low_f();

    void setDewpointYearLowF(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getHeatIndexDayHighF() const;
    bool heatIndexDayHighFIsSet() const;
    void unsetHeat_index_day_high_f();

    void setHeatIndexDayHighF(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getHeatIndexDayHighTime() const;
    bool heatIndexDayHighTimeIsSet() const;
    void unsetHeat_index_day_high_time();

    void setHeatIndexDayHighTime(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getHeatIndexMonthHighF() const;
    bool heatIndexMonthHighFIsSet() const;
    void unsetHeat_index_month_high_f();

    void setHeatIndexMonthHighF(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getHeatIndexYearHighF() const;
    bool heatIndexYearHighFIsSet() const;
    void unsetHeat_index_year_high_f();

    void setHeatIndexYearHighF(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getPressureDayHighIn() const;
    bool pressureDayHighInIsSet() const;
    void unsetPressure_day_high_in();

    void setPressureDayHighIn(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getPressureDayHighTime() const;
    bool pressureDayHighTimeIsSet() const;
    void unsetPressure_day_high_time();

    void setPressureDayHighTime(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getPressureDayLowIn() const;
    bool pressureDayLowInIsSet() const;
    void unsetPressure_day_low_in();

    void setPressureDayLowIn(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getPressureDayLowTime() const;
    bool pressureDayLowTimeIsSet() const;
    void unsetPressure_day_low_time();

    void setPressureDayLowTime(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getPressureMonthHighIn() const;
    bool pressureMonthHighInIsSet() const;
    void unsetPressure_month_high_in();

    void setPressureMonthHighIn(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getPressureMonthLowIn() const;
    bool pressureMonthLowInIsSet() const;
    void unsetPressure_month_low_in();

    void setPressureMonthLowIn(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getPressureTendencyString() const;
    bool pressureTendencyStringIsSet() const;
    void unsetPressure_tendency_string();

    void setPressureTendencyString(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getPressureYearHighIn() const;
    bool pressureYearHighInIsSet() const;
    void unsetPressure_year_high_in();

    void setPressureYearHighIn(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getPressureYearLowIn() const;
    bool pressureYearLowInIsSet() const;
    void unsetPressure_year_low_in();

    void setPressureYearLowIn(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getRainDayIn() const;
    bool rainDayInIsSet() const;
    void unsetRain_day_in();

    void setRainDayIn(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getRainMonthIn() const;
    bool rainMonthInIsSet() const;
    void unsetRain_month_in();

    void setRainMonthIn(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getRainRateDayHighInPerHr() const;
    bool rainRateDayHighInPerHrIsSet() const;
    void unsetRain_rate_day_high_in_per_hr();

    void setRainRateDayHighInPerHr(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getRainRateHourHighInPerHr() const;
    bool rainRateHourHighInPerHrIsSet() const;
    void unsetRain_rate_hour_high_in_per_hr();

    void setRainRateHourHighInPerHr(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getRainRateInPerHr() const;
    bool rainRateInPerHrIsSet() const;
    void unsetRain_rate_in_per_hr();

    void setRainRateInPerHr(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getRainRateMonthHighInPerHr() const;
    bool rainRateMonthHighInPerHrIsSet() const;
    void unsetRain_rate_month_high_in_per_hr();

    void setRainRateMonthHighInPerHr(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getRainRateYearHighInPerHr() const;
    bool rainRateYearHighInPerHrIsSet() const;
    void unsetRain_rate_year_high_in_per_hr();

    void setRainRateYearHighInPerHr(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getRainStormIn() const;
    bool rainStormInIsSet() const;
    void unsetRain_storm_in();

    void setRainStormIn(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getRainYearIn() const;
    bool rainYearInIsSet() const;
    void unsetRain_year_in();

    void setRainYearIn(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getRelativeHumidityDayHigh() const;
    bool relativeHumidityDayHighIsSet() const;
    void unsetRelative_humidity_day_high();

    void setRelativeHumidityDayHigh(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getRelativeHumidityDayHighTime() const;
    bool relativeHumidityDayHighTimeIsSet() const;
    void unsetRelative_humidity_day_high_time();

    void setRelativeHumidityDayHighTime(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getRelativeHumidityDayLow() const;
    bool relativeHumidityDayLowIsSet() const;
    void unsetRelative_humidity_day_low();

    void setRelativeHumidityDayLow(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getRelativeHumidityDayLowTime() const;
    bool relativeHumidityDayLowTimeIsSet() const;
    void unsetRelative_humidity_day_low_time();

    void setRelativeHumidityDayLowTime(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getRelativeHumidityMonthHigh() const;
    bool relativeHumidityMonthHighIsSet() const;
    void unsetRelative_humidity_month_high();

    void setRelativeHumidityMonthHigh(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getRelativeHumidityIn() const;
    bool relativeHumidityInIsSet() const;
    void unsetRelative_humidity_in();

    void setRelativeHumidityIn(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getRelativeHumidityInDayHigh() const;
    bool relativeHumidityInDayHighIsSet() const;
    void unsetRelative_humidity_in_day_high();

    void setRelativeHumidityInDayHigh(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getRelativeHumidityInDayHighTime() const;
    bool relativeHumidityInDayHighTimeIsSet() const;
    void unsetRelative_humidity_in_day_high_time();

    void setRelativeHumidityInDayHighTime(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getRelativeHumidityInDayLow() const;
    bool relativeHumidityInDayLowIsSet() const;
    void unsetRelative_humidity_in_day_low();

    void setRelativeHumidityInDayLow(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getRelativeHumidityInDayLowTime() const;
    bool relativeHumidityInDayLowTimeIsSet() const;
    void unsetRelative_humidity_in_day_low_time();

    void setRelativeHumidityInDayLowTime(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getRelativeHumidityInMonthHigh() const;
    bool relativeHumidityInMonthHighIsSet() const;
    void unsetRelative_humidity_in_month_high();

    void setRelativeHumidityInMonthHigh(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getRelativeHumidityInMonthLow() const;
    bool relativeHumidityInMonthLowIsSet() const;
    void unsetRelative_humidity_in_month_low();

    void setRelativeHumidityInMonthLow(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getRelativeHumidityInYearHigh() const;
    bool relativeHumidityInYearHighIsSet() const;
    void unsetRelative_humidity_in_year_high();

    void setRelativeHumidityInYearHigh(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getRelativeHumidityInYearLow() const;
    bool relativeHumidityInYearLowIsSet() const;
    void unsetRelative_humidity_in_year_low();

    void setRelativeHumidityInYearLow(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getSunrise() const;
    bool sunriseIsSet() const;
    void unsetSunrise();

    void setSunrise(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getSunset() const;
    bool sunsetIsSet() const;
    void unsetSunset();

    void setSunset(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getTempDayHighF() const;
    bool tempDayHighFIsSet() const;
    void unsetTemp_day_high_f();

    void setTempDayHighF(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getTempDayHighTime() const;
    bool tempDayHighTimeIsSet() const;
    void unsetTemp_day_high_time();

    void setTempDayHighTime(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getTempDayLowF() const;
    bool tempDayLowFIsSet() const;
    void unsetTemp_day_low_f();

    void setTempDayLowF(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getTempDayLowTime() const;
    bool tempDayLowTimeIsSet() const;
    void unsetTemp_day_low_time();

    void setTempDayLowTime(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getTempMonthHighF() const;
    bool tempMonthHighFIsSet() const;
    void unsetTemp_month_high_f();

    void setTempMonthHighF(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getTempMonthLowF() const;
    bool tempMonthLowFIsSet() const;
    void unsetTemp_month_low_f();

    void setTempMonthLowF(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getTempYearHighF() const;
    bool tempYearHighFIsSet() const;
    void unsetTemp_year_high_f();

    void setTempYearHighF(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getTempYearLowF() const;
    bool tempYearLowFIsSet() const;
    void unsetTemp_year_low_f();

    void setTempYearLowF(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getTempInDayHighF() const;
    bool tempInDayHighFIsSet() const;
    void unsetTemp_in_day_high_f();

    void setTempInDayHighF(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getTempInDayHighTime() const;
    bool tempInDayHighTimeIsSet() const;
    void unsetTemp_in_day_high_time();

    void setTempInDayHighTime(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getTempInDayLowF() const;
    bool tempInDayLowFIsSet() const;
    void unsetTemp_in_day_low_f();

    void setTempInDayLowF(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getTempInDayLowTime() const;
    bool tempInDayLowTimeIsSet() const;
    void unsetTemp_in_day_low_time();

    void setTempInDayLowTime(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getTempInF() const;
    bool tempInFIsSet() const;
    void unsetTemp_in_f();

    void setTempInF(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getTempInMonthHighF() const;
    bool tempInMonthHighFIsSet() const;
    void unsetTemp_in_month_high_f();

    void setTempInMonthHighF(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getTempInMonthLowF() const;
    bool tempInMonthLowFIsSet() const;
    void unsetTemp_in_month_low_f();

    void setTempInMonthLowF(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getTempInYearHighF() const;
    bool tempInYearHighFIsSet() const;
    void unsetTemp_in_year_high_f();

    void setTempInYearHighF(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getTempInYearLowF() const;
    bool tempInYearLowFIsSet() const;
    void unsetTemp_in_year_low_f();

    void setTempInYearLowF(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getWindDayHighMph() const;
    bool windDayHighMphIsSet() const;
    void unsetWind_day_high_mph();

    void setWindDayHighMph(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getWindDayHighTime() const;
    bool windDayHighTimeIsSet() const;
    void unsetWind_day_high_time();

    void setWindDayHighTime(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getWindMonthHighMph() const;
    bool windMonthHighMphIsSet() const;
    void unsetWind_month_high_mph();

    void setWindMonthHighMph(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getWindTenMinAvgMph() const;
    bool windTenMinAvgMphIsSet() const;
    void unsetWind_ten_min_avg_mph();

    void setWindTenMinAvgMph(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getWindTenMinGustMph() const;
    bool windTenMinGustMphIsSet() const;
    void unsetWind_ten_min_gust_mph();

    void setWindTenMinGustMph(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getWindYearHighMph() const;
    bool windYearHighMphIsSet() const;
    void unsetWind_year_high_mph();

    void setWindYearHighMph(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getWindchillDayLowF() const;
    bool windchillDayLowFIsSet() const;
    void unsetWindchill_day_low_f();

    void setWindchillDayLowF(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getWindchillDayLowTime() const;
    bool windchillDayLowTimeIsSet() const;
    void unsetWindchill_day_low_time();

    void setWindchillDayLowTime(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getWindchillMonthLowF() const;
    bool windchillMonthLowFIsSet() const;
    void unsetWindchill_month_low_f();

    void setWindchillMonthLowF(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getWindchillYearLowF() const;
    bool windchillYearLowFIsSet() const;
    void unsetWindchill_year_low_f();

    void setWindchillYearLowF(const utility::string_t& value);


protected:
    utility::string_t m_DID;
    bool m_DIDIsSet;
    utility::string_t m_Station_name;
    bool m_Station_nameIsSet;
    int32_t m_Observation_age;
    bool m_Observation_ageIsSet;
    utility::string_t m_Dewpoint_day_high_f;
    bool m_Dewpoint_day_high_fIsSet;
    utility::string_t m_Dewpoint_day_high_time;
    bool m_Dewpoint_day_high_timeIsSet;
    utility::string_t m_Dewpoint_day_low_f;
    bool m_Dewpoint_day_low_fIsSet;
    utility::string_t m_Dewpoint_day_low_time;
    bool m_Dewpoint_day_low_timeIsSet;
    utility::string_t m_Dewpoint_month_high_f;
    bool m_Dewpoint_month_high_fIsSet;
    utility::string_t m_Dewpoint_month_low_f;
    bool m_Dewpoint_month_low_fIsSet;
    utility::string_t m_Dewpoint_year_high_f;
    bool m_Dewpoint_year_high_fIsSet;
    utility::string_t m_Dewpoint_year_low_f;
    bool m_Dewpoint_year_low_fIsSet;
    utility::string_t m_Heat_index_day_high_f;
    bool m_Heat_index_day_high_fIsSet;
    utility::string_t m_Heat_index_day_high_time;
    bool m_Heat_index_day_high_timeIsSet;
    utility::string_t m_Heat_index_month_high_f;
    bool m_Heat_index_month_high_fIsSet;
    utility::string_t m_Heat_index_year_high_f;
    bool m_Heat_index_year_high_fIsSet;
    utility::string_t m_Pressure_day_high_in;
    bool m_Pressure_day_high_inIsSet;
    utility::string_t m_Pressure_day_high_time;
    bool m_Pressure_day_high_timeIsSet;
    utility::string_t m_Pressure_day_low_in;
    bool m_Pressure_day_low_inIsSet;
    utility::string_t m_Pressure_day_low_time;
    bool m_Pressure_day_low_timeIsSet;
    utility::string_t m_Pressure_month_high_in;
    bool m_Pressure_month_high_inIsSet;
    utility::string_t m_Pressure_month_low_in;
    bool m_Pressure_month_low_inIsSet;
    utility::string_t m_Pressure_tendency_string;
    bool m_Pressure_tendency_stringIsSet;
    utility::string_t m_Pressure_year_high_in;
    bool m_Pressure_year_high_inIsSet;
    utility::string_t m_Pressure_year_low_in;
    bool m_Pressure_year_low_inIsSet;
    utility::string_t m_Rain_day_in;
    bool m_Rain_day_inIsSet;
    utility::string_t m_Rain_month_in;
    bool m_Rain_month_inIsSet;
    utility::string_t m_Rain_rate_day_high_in_per_hr;
    bool m_Rain_rate_day_high_in_per_hrIsSet;
    utility::string_t m_Rain_rate_hour_high_in_per_hr;
    bool m_Rain_rate_hour_high_in_per_hrIsSet;
    utility::string_t m_Rain_rate_in_per_hr;
    bool m_Rain_rate_in_per_hrIsSet;
    utility::string_t m_Rain_rate_month_high_in_per_hr;
    bool m_Rain_rate_month_high_in_per_hrIsSet;
    utility::string_t m_Rain_rate_year_high_in_per_hr;
    bool m_Rain_rate_year_high_in_per_hrIsSet;
    utility::string_t m_Rain_storm_in;
    bool m_Rain_storm_inIsSet;
    utility::string_t m_Rain_year_in;
    bool m_Rain_year_inIsSet;
    utility::string_t m_Relative_humidity_day_high;
    bool m_Relative_humidity_day_highIsSet;
    utility::string_t m_Relative_humidity_day_high_time;
    bool m_Relative_humidity_day_high_timeIsSet;
    utility::string_t m_Relative_humidity_day_low;
    bool m_Relative_humidity_day_lowIsSet;
    utility::string_t m_Relative_humidity_day_low_time;
    bool m_Relative_humidity_day_low_timeIsSet;
    utility::string_t m_Relative_humidity_month_high;
    bool m_Relative_humidity_month_highIsSet;
    utility::string_t m_Relative_humidity_in;
    bool m_Relative_humidity_inIsSet;
    utility::string_t m_Relative_humidity_in_day_high;
    bool m_Relative_humidity_in_day_highIsSet;
    utility::string_t m_Relative_humidity_in_day_high_time;
    bool m_Relative_humidity_in_day_high_timeIsSet;
    utility::string_t m_Relative_humidity_in_day_low;
    bool m_Relative_humidity_in_day_lowIsSet;
    utility::string_t m_Relative_humidity_in_day_low_time;
    bool m_Relative_humidity_in_day_low_timeIsSet;
    utility::string_t m_Relative_humidity_in_month_high;
    bool m_Relative_humidity_in_month_highIsSet;
    utility::string_t m_Relative_humidity_in_month_low;
    bool m_Relative_humidity_in_month_lowIsSet;
    utility::string_t m_Relative_humidity_in_year_high;
    bool m_Relative_humidity_in_year_highIsSet;
    utility::string_t m_Relative_humidity_in_year_low;
    bool m_Relative_humidity_in_year_lowIsSet;
    utility::string_t m_Sunrise;
    bool m_SunriseIsSet;
    utility::string_t m_Sunset;
    bool m_SunsetIsSet;
    utility::string_t m_Temp_day_high_f;
    bool m_Temp_day_high_fIsSet;
    utility::string_t m_Temp_day_high_time;
    bool m_Temp_day_high_timeIsSet;
    utility::string_t m_Temp_day_low_f;
    bool m_Temp_day_low_fIsSet;
    utility::string_t m_Temp_day_low_time;
    bool m_Temp_day_low_timeIsSet;
    utility::string_t m_Temp_month_high_f;
    bool m_Temp_month_high_fIsSet;
    utility::string_t m_Temp_month_low_f;
    bool m_Temp_month_low_fIsSet;
    utility::string_t m_Temp_year_high_f;
    bool m_Temp_year_high_fIsSet;
    utility::string_t m_Temp_year_low_f;
    bool m_Temp_year_low_fIsSet;
    utility::string_t m_Temp_in_day_high_f;
    bool m_Temp_in_day_high_fIsSet;
    utility::string_t m_Temp_in_day_high_time;
    bool m_Temp_in_day_high_timeIsSet;
    utility::string_t m_Temp_in_day_low_f;
    bool m_Temp_in_day_low_fIsSet;
    utility::string_t m_Temp_in_day_low_time;
    bool m_Temp_in_day_low_timeIsSet;
    utility::string_t m_Temp_in_f;
    bool m_Temp_in_fIsSet;
    utility::string_t m_Temp_in_month_high_f;
    bool m_Temp_in_month_high_fIsSet;
    utility::string_t m_Temp_in_month_low_f;
    bool m_Temp_in_month_low_fIsSet;
    utility::string_t m_Temp_in_year_high_f;
    bool m_Temp_in_year_high_fIsSet;
    utility::string_t m_Temp_in_year_low_f;
    bool m_Temp_in_year_low_fIsSet;
    utility::string_t m_Wind_day_high_mph;
    bool m_Wind_day_high_mphIsSet;
    utility::string_t m_Wind_day_high_time;
    bool m_Wind_day_high_timeIsSet;
    utility::string_t m_Wind_month_high_mph;
    bool m_Wind_month_high_mphIsSet;
    utility::string_t m_Wind_ten_min_avg_mph;
    bool m_Wind_ten_min_avg_mphIsSet;
    utility::string_t m_Wind_ten_min_gust_mph;
    bool m_Wind_ten_min_gust_mphIsSet;
    utility::string_t m_Wind_year_high_mph;
    bool m_Wind_year_high_mphIsSet;
    utility::string_t m_Windchill_day_low_f;
    bool m_Windchill_day_low_fIsSet;
    utility::string_t m_Windchill_day_low_time;
    bool m_Windchill_day_low_timeIsSet;
    utility::string_t m_Windchill_month_low_f;
    bool m_Windchill_month_low_fIsSet;
    utility::string_t m_Windchill_year_low_f;
    bool m_Windchill_year_low_fIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_Davis_current_observation_H_ */
