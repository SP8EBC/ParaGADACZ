/**
 * Pogoda.cc
 * Backend API specification for pogoda.cc system
 *
 * The version of the OpenAPI document: 1.0.11
 * Contact: sp8ebc@interia.pl
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.3.1.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * AvailableParametersModel.h
 *
 * desc
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_AvailableParametersModel_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_AvailableParametersModel_H_


#include "../ModelBase.h"


namespace org {
namespace openapitools {
namespace client {
namespace model {


/// <summary>
/// desc
/// </summary>
class  AvailableParametersModel
    : public ModelBase
{
public:
    AvailableParametersModel();
    virtual ~AvailableParametersModel();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// AvailableParametersModel members

    /// <summary>
    /// 
    /// </summary>
    bool isHasWind() const;
    bool hasWindIsSet() const;
    void unsetHasWind();

    void setHasWind(bool value);

    /// <summary>
    /// 
    /// </summary>
    bool isHasQnh() const;
    bool hasQnhIsSet() const;
    void unsetHasQnh();

    void setHasQnh(bool value);

    /// <summary>
    /// 
    /// </summary>
    bool isHasHumidity() const;
    bool hasHumidityIsSet() const;
    void unsetHasHumidity();

    void setHasHumidity(bool value);

    /// <summary>
    /// 
    /// </summary>
    bool isHasRain() const;
    bool hasRainIsSet() const;
    void unsetHasRain();

    void setHasRain(bool value);

    /// <summary>
    /// 
    /// </summary>
    int32_t getTelemetryVersion() const;
    bool telemetryVersionIsSet() const;
    void unsetTelemetryVersion();

    void setTelemetryVersion(int32_t value);


protected:
    bool m_HasWind;
    bool m_HasWindIsSet;
    bool m_HasQnh;
    bool m_HasQnhIsSet;
    bool m_HasHumidity;
    bool m_HasHumidityIsSet;
    bool m_HasRain;
    bool m_HasRainIsSet;
    int32_t m_TelemetryVersion;
    bool m_TelemetryVersionIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_AvailableParametersModel_H_ */
