/**
 * Pogoda.cc
 * Backend API specification for pogoda.cc system
 *
 * The version of the OpenAPI document: 1.0.11
 * Contact: sp8ebc@interia.pl
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.3.1.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * StationDefinitionModel.h
 *
 * dupa
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_StationDefinitionModel_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_StationDefinitionModel_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace org {
namespace openapitools {
namespace client {
namespace model {


/// <summary>
/// dupa
/// </summary>
class  StationDefinitionModel
    : public ModelBase
{
public:
    StationDefinitionModel();
    virtual ~StationDefinitionModel();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// StationDefinitionModel members

    /// <summary>
    /// 
    /// </summary>
    int32_t getId() const;
    bool idIsSet() const;
    void unsetId();

    void setId(int32_t value);

    /// <summary>
    /// description123
    /// </summary>
    utility::string_t getName() const;
    bool nameIsSet() const;
    void unsetName();

    void setName(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    bool isEnabled() const;
    bool enabledIsSet() const;
    void unsetEnabled();

    void setEnabled(bool value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getCallsign() const;
    bool callsignIsSet() const;
    void unsetCallsign();

    void setCallsign(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    int32_t getSsid() const;
    bool ssidIsSet() const;
    void unsetSsid();

    void setSsid(int32_t value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getDisplayedName() const;
    bool displayedNameIsSet() const;
    void unsetDisplayedName();

    void setDisplayedName(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getDisplayedLocation() const;
    bool displayedLocationIsSet() const;
    void unsetDisplayedLocation();

    void setDisplayedLocation(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getSponsorUrl() const;
    bool sponsorUrlIsSet() const;
    void unsetSponsorUrl();

    void setSponsorUrl(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getBackgroundJpg() const;
    bool backgroundJpgIsSet() const;
    void unsetBackgroundJpg();

    void setBackgroundJpg(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    int32_t getBackgroundJpgAlign() const;
    bool backgroundJpgAlignIsSet() const;
    void unsetBackgroundJpgAlign();

    void setBackgroundJpgAlign(int32_t value);

    /// <summary>
    /// 
    /// </summary>
    int32_t getStationNameTextColour() const;
    bool stationNameTextColourIsSet() const;
    void unsetStationNameTextColour();

    void setStationNameTextColour(int32_t value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getMoreInfo() const;
    bool moreInfoIsSet() const;
    void unsetMoreInfo();

    void setMoreInfo(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    double getLat() const;
    bool latIsSet() const;
    void unsetLat();

    void setLat(double value);

    /// <summary>
    /// 
    /// </summary>
    double getLon() const;
    bool lonIsSet() const;
    void unsetLon();

    void setLon(double value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getTimezone() const;
    bool timezoneIsSet() const;
    void unsetTimezone();

    void setTimezone(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    bool isHasWind() const;
    bool hasWindIsSet() const;
    void unsetHasWind();

    void setHasWind(bool value);

    /// <summary>
    /// 
    /// </summary>
    bool isHasQnh() const;
    bool hasQnhIsSet() const;
    void unsetHasQnh();

    void setHasQnh(bool value);

    /// <summary>
    /// 
    /// </summary>
    bool isHasHumidity() const;
    bool hasHumidityIsSet() const;
    void unsetHasHumidity();

    void setHasHumidity(bool value);

    /// <summary>
    /// 
    /// </summary>
    bool isHasRain() const;
    bool hasRainIsSet() const;
    void unsetHasRain();

    void setHasRain(bool value);


protected:
    int32_t m_Id;
    bool m_IdIsSet;
    utility::string_t m_Name;
    bool m_NameIsSet;
    bool m_Enabled;
    bool m_EnabledIsSet;
    utility::string_t m_Callsign;
    bool m_CallsignIsSet;
    int32_t m_Ssid;
    bool m_SsidIsSet;
    utility::string_t m_DisplayedName;
    bool m_DisplayedNameIsSet;
    utility::string_t m_DisplayedLocation;
    bool m_DisplayedLocationIsSet;
    utility::string_t m_SponsorUrl;
    bool m_SponsorUrlIsSet;
    utility::string_t m_BackgroundJpg;
    bool m_BackgroundJpgIsSet;
    int32_t m_BackgroundJpgAlign;
    bool m_BackgroundJpgAlignIsSet;
    int32_t m_StationNameTextColour;
    bool m_StationNameTextColourIsSet;
    utility::string_t m_MoreInfo;
    bool m_MoreInfoIsSet;
    double m_Lat;
    bool m_LatIsSet;
    double m_Lon;
    bool m_LonIsSet;
    utility::string_t m_Timezone;
    bool m_TimezoneIsSet;
    bool m_HasWind;
    bool m_HasWindIsSet;
    bool m_HasQnh;
    bool m_HasQnhIsSet;
    bool m_HasHumidity;
    bool m_HasHumidityIsSet;
    bool m_HasRain;
    bool m_HasRainIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_StationDefinitionModel_H_ */
