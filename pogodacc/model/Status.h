/**
 * Pogoda.cc
 * Backend API specification for pogoda.cc system
 *
 * The version of the OpenAPI document: 1.0.11
 * Contact: sp8ebc@interia.pl
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.3.1.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * Status.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_Status_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_Status_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace org {
namespace openapitools {
namespace client {
namespace model {


/// <summary>
/// 
/// </summary>
class  Status
    : public ModelBase
{
public:
    Status();
    virtual ~Status();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// Status members

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getBackendApiVersionString() const;
    bool backendApiVersionStringIsSet() const;
    void unsetBackend_api_version_string();

    void setBackendApiVersionString(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    int32_t getBackendApiMainVersionNumber() const;
    bool backendApiMainVersionNumberIsSet() const;
    void unsetBackend_api_main_version_number();

    void setBackendApiMainVersionNumber(int32_t value);

    /// <summary>
    /// 
    /// </summary>
    int32_t getBackendApiPatchVersionNumber() const;
    bool backendApiPatchVersionNumberIsSet() const;
    void unsetBackend_api_patch_version_number();

    void setBackendApiPatchVersionNumber(int32_t value);

    /// <summary>
    /// 
    /// </summary>
    int32_t getBackendApiBuildVersionNumber() const;
    bool backendApiBuildVersionNumberIsSet() const;
    void unsetBackend_api_build_version_number();

    void setBackendApiBuildVersionNumber(int32_t value);

    /// <summary>
    /// 
    /// </summary>
    int32_t getStatus() const;
    bool statusIsSet() const;
    void unsetStatus();

    void setStatus(int32_t value);

    /// <summary>
    /// 
    /// </summary>
    int64_t getApiTimestampEpoch() const;
    bool apiTimestampEpochIsSet() const;
    void unsetApi_timestamp_epoch();

    void setApiTimestampEpoch(int64_t value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getApiTzOffsetString() const;
    bool apiTzOffsetStringIsSet() const;
    void unsetApi_tz_offset_string();

    void setApiTzOffsetString(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    int32_t getApiTzOffsetSeconds() const;
    bool apiTzOffsetSecondsIsSet() const;
    void unsetApi_tz_offset_seconds();

    void setApiTzOffsetSeconds(int32_t value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getApiTimezone() const;
    bool apiTimezoneIsSet() const;
    void unsetApi_timezone();

    void setApiTimezone(const utility::string_t& value);


protected:
    utility::string_t m_Backend_api_version_string;
    bool m_Backend_api_version_stringIsSet;
    int32_t m_Backend_api_main_version_number;
    bool m_Backend_api_main_version_numberIsSet;
    int32_t m_Backend_api_patch_version_number;
    bool m_Backend_api_patch_version_numberIsSet;
    int32_t m_Backend_api_build_version_number;
    bool m_Backend_api_build_version_numberIsSet;
    int32_t m_Status;
    bool m_StatusIsSet;
    int64_t m_Api_timestamp_epoch;
    bool m_Api_timestamp_epochIsSet;
    utility::string_t m_Api_tz_offset_string;
    bool m_Api_tz_offset_stringIsSet;
    int32_t m_Api_tz_offset_seconds;
    bool m_Api_tz_offset_secondsIsSet;
    utility::string_t m_Api_timezone;
    bool m_Api_timezoneIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_Status_H_ */
