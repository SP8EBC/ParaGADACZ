/**
 * Pogoda.cc
 * Backend API specification for pogoda.cc system
 *
 * The version of the OpenAPI document: 1.0.11
 * Contact: sp8ebc@interia.pl
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.3.1.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * StationDataModel.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_StationDataModel_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_StationDataModel_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace org {
namespace openapitools {
namespace client {
namespace model {


/// <summary>
/// 
/// </summary>
class  StationDataModel
    : public ModelBase
{
public:
    StationDataModel();
    virtual ~StationDataModel();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// StationDataModel members

    /// <summary>
    /// 
    /// </summary>
    int32_t getId() const;
    bool idIsSet() const;
    void unsetId();

    void setId(int32_t value);

    /// <summary>
    /// UTC timestamp in UNIX epoch when this measurement was taken
    /// </summary>
    int64_t getEpoch() const;
    bool epochIsSet() const;
    void unsetEpoch();

    void setEpoch(int64_t value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getStation() const;
    bool stationIsSet() const;
    void unsetStation();

    void setStation(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    float getTemperature() const;
    bool temperatureIsSet() const;
    void unsetTemperature();

    void setTemperature(float value);

    /// <summary>
    /// 
    /// </summary>
    int32_t getHumidity() const;
    bool humidityIsSet() const;
    void unsetHumidity();

    void setHumidity(int32_t value);

    /// <summary>
    /// 
    /// </summary>
    float getPressure() const;
    bool pressureIsSet() const;
    void unsetPressure();

    void setPressure(float value);

    /// <summary>
    /// 
    /// </summary>
    int32_t getWinddir() const;
    bool winddirIsSet() const;
    void unsetWinddir();

    void setWinddir(int32_t value);

    /// <summary>
    /// 
    /// </summary>
    float getWindspeed() const;
    bool windspeedIsSet() const;
    void unsetWindspeed();

    void setWindspeed(float value);

    /// <summary>
    /// 
    /// </summary>
    float getWindgusts() const;
    bool windgustsIsSet() const;
    void unsetWindgusts();

    void setWindgusts(float value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getTsource() const;
    bool tsourceIsSet() const;
    void unsetTsource();

    void setTsource(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getWsource() const;
    bool wsourceIsSet() const;
    void unsetWsource();

    void setWsource(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getPsource() const;
    bool psourceIsSet() const;
    void unsetPsource();

    void setPsource(const utility::string_t& value);


protected:
    int32_t m_Id;
    bool m_IdIsSet;
    int64_t m_Epoch;
    bool m_EpochIsSet;
    utility::string_t m_Station;
    bool m_StationIsSet;
    float m_Temperature;
    bool m_TemperatureIsSet;
    int32_t m_Humidity;
    bool m_HumidityIsSet;
    float m_Pressure;
    bool m_PressureIsSet;
    int32_t m_Winddir;
    bool m_WinddirIsSet;
    float m_Windspeed;
    bool m_WindspeedIsSet;
    float m_Windgusts;
    bool m_WindgustsIsSet;
    utility::string_t m_Tsource;
    bool m_TsourceIsSet;
    utility::string_t m_Wsource;
    bool m_WsourceIsSet;
    utility::string_t m_Psource;
    bool m_PsourceIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_StationDataModel_H_ */
