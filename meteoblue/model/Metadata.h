/**
 * Meteoblue Package API - day & 3h
 * This yaml contains a description of basic_day and basic_3h from Package API provided by Meteoblue
 *
 * The version of the OpenAPI document: 1.0.11
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.3.1.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * Metadata.h
 *
 * ...
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_Metadata_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_Metadata_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace org {
namespace openapitools {
namespace client {
namespace model {


/// <summary>
/// ...
/// </summary>
class  Metadata
    : public ModelBase
{
public:
    Metadata();
    virtual ~Metadata();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// Metadata members

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getName() const;
    bool nameIsSet() const;
    void unsetName();

    void setName(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    float getLatitude() const;
    bool latitudeIsSet() const;
    void unsetLatitude();

    void setLatitude(float value);

    /// <summary>
    /// 
    /// </summary>
    float getLongitude() const;
    bool longitudeIsSet() const;
    void unsetLongitude();

    void setLongitude(float value);

    /// <summary>
    /// 
    /// </summary>
    int32_t getHeight() const;
    bool heightIsSet() const;
    void unsetHeight();

    void setHeight(int32_t value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getTimezoneAbbrevation() const;
    bool timezoneAbbrevationIsSet() const;
    void unsetTimezone_abbrevation();

    void setTimezoneAbbrevation(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    float getUtcTimeoffset() const;
    bool utcTimeoffsetIsSet() const;
    void unsetUtc_timeoffset();

    void setUtcTimeoffset(float value);

    /// <summary>
    /// 
    /// </summary>
    int32_t getModelrunUtc() const;
    bool modelrunUtcIsSet() const;
    void unsetModelrun_utc();

    void setModelrunUtc(int32_t value);

    /// <summary>
    /// 
    /// </summary>
    int32_t getModelrunUpdatetimeUtc() const;
    bool modelrunUpdatetimeUtcIsSet() const;
    void unsetModelrun_updatetime_utc();

    void setModelrunUpdatetimeUtc(int32_t value);


protected:
    utility::string_t m_Name;
    bool m_NameIsSet;
    float m_Latitude;
    bool m_LatitudeIsSet;
    float m_Longitude;
    bool m_LongitudeIsSet;
    int32_t m_Height;
    bool m_HeightIsSet;
    utility::string_t m_Timezone_abbrevation;
    bool m_Timezone_abbrevationIsSet;
    float m_Utc_timeoffset;
    bool m_Utc_timeoffsetIsSet;
    int32_t m_Modelrun_utc;
    bool m_Modelrun_utcIsSet;
    int32_t m_Modelrun_updatetime_utc;
    bool m_Modelrun_updatetime_utcIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_Metadata_H_ */
