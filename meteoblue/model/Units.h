/**
 * Meteoblue Package API - day & 3h
 * This yaml contains a description of basic_day and basic_3h from Package API provided by Meteoblue
 *
 * The version of the OpenAPI document: 1.0.11
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.3.1.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * Units.h
 *
 * Measurement units
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_Units_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_Units_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace org {
namespace openapitools {
namespace client {
namespace model {


/// <summary>
/// Measurement units
/// </summary>
class  Units
    : public ModelBase
{
public:
    Units();
    virtual ~Units();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// Units members

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getTime() const;
    bool timeIsSet() const;
    void unsetTime();

    void setTime(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getPrecipitationProbability() const;
    bool precipitationProbabilityIsSet() const;
    void unsetPrecipitation_probability();

    void setPrecipitationProbability(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getPressure() const;
    bool pressureIsSet() const;
    void unsetPressure();

    void setPressure(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getRelativehumidity() const;
    bool relativehumidityIsSet() const;
    void unsetRelativehumidity();

    void setRelativehumidity(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getCo() const;
    bool coIsSet() const;
    void unsetCo();

    void setCo(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getPrecipitation() const;
    bool precipitationIsSet() const;
    void unsetPrecipitation();

    void setPrecipitation(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getTemperature() const;
    bool temperatureIsSet() const;
    void unsetTemperature();

    void setTemperature(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getWindspeed() const;
    bool windspeedIsSet() const;
    void unsetWindspeed();

    void setWindspeed(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getWinddirection() const;
    bool winddirectionIsSet() const;
    void unsetWinddirection();

    void setWinddirection(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getPredictability() const;
    bool predictabilityIsSet() const;
    void unsetPredictability();

    void setPredictability(const utility::string_t& value);


protected:
    utility::string_t m_Time;
    bool m_TimeIsSet;
    utility::string_t m_Precipitation_probability;
    bool m_Precipitation_probabilityIsSet;
    utility::string_t m_Pressure;
    bool m_PressureIsSet;
    utility::string_t m_Relativehumidity;
    bool m_RelativehumidityIsSet;
    utility::string_t m_Co;
    bool m_CoIsSet;
    utility::string_t m_Precipitation;
    bool m_PrecipitationIsSet;
    utility::string_t m_Temperature;
    bool m_TemperatureIsSet;
    utility::string_t m_Windspeed;
    bool m_WindspeedIsSet;
    utility::string_t m_Winddirection;
    bool m_WinddirectionIsSet;
    utility::string_t m_Predictability;
    bool m_PredictabilityIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_Units_H_ */
